#############################################################
##                    ENVIRONMENT VARIABLES                ##
##                                                         ##
## RELEASE_TRAVIS ------> 1 to activate automatic releases ##
## USER_TRAVIS ---------> GitHub user                      ##
## EMAIL_TRAVIS --------> GitHub email                     ##
## BRANCH_TRAVIS -------> branch for releases (master)     ##
## TOKEN_TRAVIS --------> GitHub personal token            ##
## ZIP_TRAVIS ----------> release zip name (soundgo.zip)   ##
## VERSION_TRAVIS ------> release version                  ##
## SUBVERSION_TRAVIS ---> release subversion               ##
## SPRINT_TRAVIS -------> sprint id                        ##
#############################################################

language: python

python:
  - "3.6"

sudo: required
dist: trusty
addons:
  postgresql: "9.6"

services:
  - postgresql

env:
  - DJANGO_SETTINGS_MODULE="soundgo_api.settings"

install:
  - pip3 install --upgrade urllib3==1.24.3
  - pip3 install -r requirements.txt

before_script:
  - psql -c "create user soundgo with password 'soundgo'" -U postgres
  - psql -c "create database soundgo owner soundgo" -U postgres

script:
  - python3 ./soundgo_api/manage.py makemigrations
  - python3 ./soundgo_api/manage.py migrate
  - coverage run --source=soundgo_api/accounts,soundgo_api/configuration,soundgo_api/managers,soundgo_api/records,soundgo_api/sites,soundgo_api/soundgo_api,soundgo_api/tags ./soundgo_api/manage.py test ./soundgo_api
  - if [[ $TRAVIS_BRANCH == $BRANCH_TRAVIS ]] && [[ $RELEASE_TRAVIS == "1" ]]; then git archive --format zip --output ./$ZIP_TRAVIS.zip $BRANCH_TRAVIS; echo "Source code generated properly."; fi

after_success:
  coveralls

before_deploy:
- git config --local user.name $USER_TRAVIS
- git config --local user.email $EMAIL_TRAVIS
- export GIT_TAG=SoundGo-v.$VERSION_TRAVIS.$SUBVERSION_TRAVIS.$SPRINT_TRAVIS.$TRAVIS_BUILD_NUMBER
- git tag -a $GIT_TAG -m "Generated tag from TravisCI build $TRAVIS_BUILD_NUMBER"

deploy:
  provider: releases
  api-key:
    secure: $TOKEN_TRAVIS
  file: "./$ZIP_TRAVIS.zip"
  skip_cleanup: true
  on:
    branch: $BRANCH_TRAVIS
    condition: $RELEASE_TRAVIS = 1
    tags: false

notifications:
  email: false
